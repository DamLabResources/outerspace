# Configuration file for gRNA extraction.

title = "gRNA Extraction Input"

# Global patterns that can be used across multiple commands
[[patterns]]
name = "UMI_5prime"
reg_expr = "(?P<UMI_5prime>.{8})(?:CTTGGCTTTATATATCTTGTGG){s<=4}"
read = "R1"
orientation = "forward"
multiple = "first"

[[patterns]]
name = "protospacer"
reg_expr = "(?:TATCTTGTGGAAAGGACGAAACACC){s<=4}(?P<protospacer>.{19,21})(?P<downstreamof_protospacer>GTTTAAGTACTCTGTGCTGGAAACAG){s<=4}"
read = "R1"
orientation = "forward"
multiple = "first"

[[patterns]]
name = "UMI_3prime"
reg_expr = "(?P<UMI_3prime>.{8})(?:TTCCACACCCTAACTGACACAC){s<=4}"
read = "R2"
orientation = "forward"
multiple = "first"

[findseq]
# Reference patterns by name or use all patterns
pattern_names = ["UMI_5prime", "protospacer", "UMI_3prime"]
# Alternative: use_all_patterns = true
matches_only = true

# Iterative collapse steps (recommended approach)
[[collapse.steps]]
name = "umi_correction"
columns = "UMI_5prime,UMI_3prime"
method = "directional"
mismatches = 2

[[collapse.steps]]
name = "protospacer_correction"
columns = "protospacer"
method = "nearest"
allowed_list = "data/library_protospacers.txt"
mismatch_penalty = -1
gap_penalty = -2
match_score = 0
min_score = -3
rescue_strategy = "random"
rescue_kmer_size = 3
rescue_min_overlap = 8

[count]
barcode_column = 'UMI_5prime_UMI_3prime_corrected'
key_column = 'protospacer_corrected'

[gini]
column = 'UMI_5prime_UMI_3prime_corrected_count'

[merge]
column = 'UMI_5prime_UMI_3prime_corrected_count'
key_column = 'protospacer_corrected'

[stats]
key_column = 'protospacer_corrected'
count_column = 'UMI_5prime_UMI_3prime_corrected_count'

[owner]
name = "SCB, DK, WND, RB"
organization = "DUCOM"
